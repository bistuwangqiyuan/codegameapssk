---
/**
 * LessonCard Component
 * Displays a lesson card with progress indicator
 */
import type { Lesson } from '@/types/entities';

interface Props {
    lesson: Lesson;
    index: number;
    isLocked?: boolean;
    levelNumber: number;
}

const { lesson, index, isLocked = false, levelNumber } = Astro.props;

const difficultyColors = {
    easy: 'bg-green-100 text-green-700',
    medium: 'bg-yellow-100 text-yellow-700',
    hard: 'bg-red-100 text-red-700'
};
---

<div
    class={`bg-white rounded-xl shadow-md hover:shadow-xl transition-all overflow-hidden border-2 border-gray-100 ${isLocked ? 'opacity-60 cursor-not-allowed' : 'hover:border-blue-300 cursor-pointer'}`}
>
    <div class="p-6">
        <div class="flex items-start gap-4">
            <!-- Lesson Number Badge -->
            <div
                class={`flex-shrink-0 w-12 h-12 rounded-xl flex items-center justify-center text-xl font-bold ${isLocked ? 'bg-gray-200 text-gray-500' : 'bg-blue-600 text-white'}`}
            >
                {index + 1}
            </div>

            <!-- Lesson Info -->
            <div class="flex-1">
                <div class="flex items-center gap-2 mb-2">
                    <h3 class="text-xl font-bold text-gray-900">{lesson.title}</h3>
                    {
                        isLocked && (
                            <svg class="w-5 h-5 text-gray-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path
                                    stroke-linecap="round"
                                    stroke-linejoin="round"
                                    stroke-width="2"
                                    d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z"
                                />
                            </svg>
                        )
                    }
                </div>

                <p class="text-gray-600 mb-4">{lesson.description || 'No description available'}</p>

                <!-- Lesson Meta -->
                <div class="flex items-center gap-4 text-sm">
                    <span class="flex items-center gap-1 text-gray-600">
                        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                        </svg>
                        {lesson.estimated_duration || 15} min
                    </span>

                    <span class="flex items-center gap-1 text-purple-600 font-semibold">
                        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path
                                stroke-linecap="round"
                                stroke-linejoin="round"
                                stroke-width="2"
                                d="M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z"
                            ></path>
                        </svg>
                        {lesson.xp_reward || 50} XP
                    </span>

                    {
                        lesson.learning_objectives && lesson.learning_objectives.length > 0 && (
                            <span class="flex items-center gap-1 text-gray-600">
                                <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path
                                        stroke-linecap="round"
                                        stroke-linejoin="round"
                                        stroke-width="2"
                                        d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"
                                    />
                                </svg>
                                {lesson.learning_objectives.length} objectives
                            </span>
                        )
                    }
                </div>
            </div>

            <!-- Action Button -->
            <div class="flex-shrink-0">
                {
                    !isLocked ? (
                        <a
                            href={`/learn/${levelNumber}/${lesson.slug}`}
                            class="inline-flex items-center px-6 py-3 bg-blue-600 hover:bg-blue-700 text-white font-semibold rounded-lg transition-all transform hover:scale-105 shadow-md"
                        >
                            Start Lesson
                            <svg class="w-5 h-5 ml-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7l5 5m0 0l-5 5m5-5H6" />
                            </svg>
                        </a>
                    ) : (
                        <button disabled class="inline-flex items-center px-6 py-3 bg-gray-300 text-gray-600 font-semibold rounded-lg cursor-not-allowed">
                            <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path
                                    stroke-linecap="round"
                                    stroke-linejoin="round"
                                    stroke-width="2"
                                    d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z"
                                />
                            </svg>
                            Locked
                        </button>
                    )
                }
            </div>
        </div>
    </div>

    <!-- Progress Indicator (if started) -->
    <div class="bg-gray-50 px-6 py-3 border-t border-gray-100">
        <div class="flex items-center justify-between text-sm">
            <span class="text-gray-600">Progress</span>
            <span class="font-semibold text-gray-900">Not started</span>
        </div>
        <div class="mt-2 h-1.5 bg-gray-200 rounded-full overflow-hidden">
            <div class="h-full bg-blue-600 transition-all duration-300" style="width: 0%"></div>
        </div>
    </div>
</div>
